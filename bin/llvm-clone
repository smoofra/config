#!/usr/bin/python

import os
import sys
import subprocess
import argparse

paths = {
    "llvm":              ".",
    "libcxx":            "projects/libcxx",
    "clang":             "tools/clang",
    "clang-tools-extra": "tools/clang/tools/extra",
    "lld":               "tools/lld",
    "lldb":              "tools/lldb",
    "compiler-rt":       "projects/compiler-rt",
    }

base_url = "http://llvm.org/git/"

apple_base_url = "ssh://git@stash.sd.apple.com/devtools/"

parser = argparse.ArgumentParser()
parser.add_argument("projects", nargs='*')
parser.add_argument("--list", "-l", action='store_true')
parser.add_argument("--apple", action='store_true')
args = parser.parse_args()

if args.list:
    for proj in paths.keys():
        print proj
    sys.exit(0)


if not args.projects:
    parser.print_help()
    sys.exit(1)

for proj in args.projects:
    if not os.path.exists(os.path.join(paths[proj], '.git')):
        cmd = ['git', 'clone', base_url + proj + '.git', paths[proj]]
        print ">>>", ' '.join(cmd)
        proc = subprocess.Popen(cmd)
        ret = proc.wait()
        if ret != 0:
            raise Exception


    proc = subprocess.Popen(['git', 'remote'], cwd=paths[proj],
                            stdout=subprocess.PIPE)
    (out, err) = proc.communicate()
    ret = proc.wait()
    if ret != 0:
        raise Exception

    if args.apple and 'apple' not in out.split('\n'):

        cmd = ['git', 'remote', 'add', 'apple', apple_base_url + proj + '.git']
        print ">>>", ' '.join(cmd)
        proc = subprocess.Popen(cmd, cwd=paths[proj])
        ret = proc.wait()
        if ret != 0:
            raise Exception

        cmd = ['git', 'fetch', '-q', 'apple']
        print ">>>", ' '.join(cmd)
        proc = subprocess.Popen(cmd, cwd=paths[proj])
        ret = proc.wait()
        if ret != 0:
            raise Exception
