#!/usr/bin/python

import sys
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("-r", "--reverse", action='store_true')
parser.add_argument("-s", "--symmetric", action='store_true')
parser.add_argument("-i", "--intersection", action='store_true')
parser.add_argument("--split", action='store_true')
parser.add_argument("--sums", action='store_true')
parser.add_argument("a")
parser.add_argument("b")
args = parser.parse_args()

class mystring(str):
    pass

if args.sums:

    def readset(f):
        s = set()
        for line in f:
            line = line.strip()
            hash, extra = line.split(None, 1)
            string = mystring(hash)
            string.line = line
            s.add(string)
        return s

elif args.split:
    
    def readset(f):
        s = set()
        for x in f:
            for y in x.strip().split():
                s.add(y)
        return s
else:

    def readset(f):
        s = set()
        for x in f:
            s.add(x.strip())
        return s


with open (args.a, 'r') as f:
    a = readset(f)
    
with open (args.b, 'r') as f:
    b = readset(f)

if args.reverse:
    a, b = b, a

def show(x):
    if isinstance(x, mystring):
        print x.line
    else:
        print x
        
#print >>sys.stderr, len(a), len(b)

if args.intersection:
    for x in a & b:
        show(x)

else:

    for x in a - b:
        show(x)

    if args.symmetric:
        print
        for x in b - a:
            show(x)

