# -*- mode: shell-script -*-

[[ -e ~/bin/addpath ]] && PATH=$(~/bin/addpath "$HOME/bin.local" "$HOME/bin" "$HOME/apple_config/bin" /data/homebrew/bin /usr/local/bin /usr/local/sbin "$PATH" )

export PERL5LIB
[[ -e ~/bin/addpath ]] && PERL5LIB=$(~/bin/addpath ~/perl5/lib/perl5 "$PERL5LIB" )

if which gls >/dev/null ; then
	alias ls='gls --color=auto'
elif ls --version 2>/dev/null | grep -iq gnu ; then
	alias ls='ls --color=auto'
fi

if which grm >/dev/null ; then
	alias rm=grm
fi

if which gfind >/dev/null ; then
    alias find=gfind
fi

if which gxargs >/dev/null ; then
    alias xargs=gxargs
fi

export EDITOR=vim

if [[ ! -z "$INSIDE_EMACS" ]] ; then
    export TERM=vt100
    export EDITOR=emacsclient
    alias  python='env PAGER="el -r" python'
fi

# NOTE: install coreutils to get pwd to display the tilde
function trim_pwd() {
    local pwd
    local len
    local expr
    local limit
    limit=45

    expr=expr
    if [ ! x$($expr length "FOO" 2>/dev/null) = "x3" ]; then
        expr=gexpr
        if [ ! x$($expr length "FOO" 2>/dev/null) = "x3" ]; then
            pwd
            return
        fi
    fi

    pwd="$(pwd)"
    len=$($expr length "$pwd")


    if [ "$($expr substr "$pwd" 1 $($expr length "$HOME"))" = "$HOME" ]; then
        pwd="~$($expr substr "$pwd" $($expr 1 + $($expr length "$HOME")) $len)"
        len=$($expr length "$pwd")
    fi

    if [ $len -gt $limit ]; then
        pwd=..."$($expr substr "$pwd" $($expr $len - $limit) $len)"
    fi
    echo "$pwd"
}

function userathost() {
	if [[ `whoami` = lawrence_danna ]]; then
		hostname
	else
		echo `whoami`@`hostname`
	fi
}

#export PS1='\u@\h:\w\$ '
export PS1='$(userathost):$(trim_pwd)\$ '

if echo "$PATH" | tr : \\n | grep -q ~/x-tools ; then
    export PS1="-XT- $PS1"
fi

alias rerc='. ~/.bashrc'

PERL_MB_OPT="--install_base \"/Users/lawrence_danna/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/lawrence_danna/perl5"; export PERL_MM_OPT;

function xt() {
    (
        PATH=$(~/bin/addpath ~/x-tools/*/bin "$PATH")
        export HOST_CPPFLAGS=""
        export HOST_LDFLAGS=""
        HOST_CPPFLAGS+=" -I/usr/local/opt/gettext/include "
        HOST_LDFLAGS+=" -L/usr/local/opt/gettext/lib "
        HOST_CPPFLAGS+=" -I/usr/local/opt/openssl/include "
        HOST_LDFLAGS+=" -L/usr/local/opt/openssl/lib "
        "$@"
    )
}

function link-x-tools() {
    (
        trap 'echo FAILED' EXIT

        set -e
        mkdir -p ~/x-tools/host/bin

        tools=$(cat <<EOF
[ base64 basename cat chcon chgrp chmod chown chroot cksum comm cp csplit cut
date dd df dir dircolors dirname du echo env expand expr factor false fmt fold
grep groups head hostid id install join kill link ln logname ls md5sum mkdir
mkfifo mknod mktemp mv nice nl nohup nproc numfmt od paste pathchk pinky pr
printenv printf ptx pwd readlink realpath rm rmdir runcon seq sha1sum sha224sum
sha256sum sha384sum sha512sum shred shuf sleep sort split stat stdbuf stty sum
sync tac tail tee test timeout touch tr true truncate tsort tty uname unexpand
uniq unlink uptime users vdir wc who whoami xargs yes
EOF
             )
        for x in $tools ; do
            which "g$x" >/dev/null
            ln -sf `which g$x` ~/x-tools/host/bin/$x
        done

        [ -e /usr/local/opt/gnu-getopt/bin/getopt ] || exit
        ln -sf /usr/local/opt/gnu-getopt/bin/getopt ~/x-tools/host/bin/getopt
        ln -sf /usr/local/opt/gnu-getopt/bin/getopt ~/x-tools/host/bin/gnugetopt

        [ -e /usr/local/opt/gnu-sed/bin/gsed ] || exit
        ln -sf /usr/local/opt/gnu-sed/bin/gsed  ~/x-tools/host/bin/sed

        [ -e /usr/local/opt/make/bin/make ] || exit
        ln -sf /usr/local/opt/make/bin/make ~/x-tools/host/bin/make

        ln -sf $(ls -d  /usr/local/Cellar/gettext/* | sort | tail -1 )/bin/xgettext ~/x-tools/host/bin/xgettext

        trap 0 EXIT
    )
}

function foo() {
    (
        set -e
        false
        echo foo
    )
}

function rm-confdir {
    while [ -e confdir-14B---/confdir-14B--- ]; do
        mv confdir-14B---/confdir-14B--- confdir-14B---.fuck
        rmdir confdir-14B---
        mv confdir-14B---.fuck confdir-14B---
    done
    rmdir confdir-14B---    
}

export HOMEBREW_CASK_OPTS="--appdir=/Applications"
if [[ -e /data/tmp ]]; then
    export HOMEBREW_TEMP=/data/tmp
fi

# wifi on, wifi off
alias wifi='networksetup -setairportpower airport'

# mouse on / mouse off
alias mouse='tmux setw -g mode'

alias resetup='bash ~/config/setup-mac.sh'

alias bear='bear -a'

alias rerdm='launchctl unload  ~/Library/LaunchAgents/com.andersbakken.rtags.agent.plist ; launchctl load  ~/Library/LaunchAgents/com.andersbakken.rtags.agent.plist'

alias lsd='gls -l -r --sort=time --color=auto'

alias apm='/Applications/Atom.app//Contents/Resources/app/apm/bin/apm'

if  [ -e ~/apple_config/bashrc ]; then
    . ~/apple_config/bashrc
fi

function ipy {
    if ! tmux list-sessions 2>/dev/null | grep -q '^ipython:' ; then
        tmux new-session -d  -s ipython 'ipython notebook --no-browser'
        sleep 5
    fi
    open -a iPython
}

function wrap {
    case $1 in
        on)
            tput smam
            ;;
        off)
            tput rmam
            ;;
        *)
            echo "huh?"
            ;;
    esac
}


export PROMPT_COMMAND=""

if type update_terminal_cwd 2>/dev/null | grep -q 'shell function'; then
    PROMPT_COMMAND+="update_terminal_cwd; "
fi

# Avoid duplicates
export HISTCONTROL=ignoredups:erasedups

# When the shell exits, append to the history file instead of overwriting it
shopt -s histappend

# After each command, append to the history file and reread it
PROMPT_COMMAND+="history -a; history -c; history -r; "

# eternal history
export HISTFILESIZE=
export HISTSIZE=
export HISTFILE=~/.bash_history

if [ -e ~/.bashrc-private ]; then
    . ~/.bashrc-private
fi

function ptr() {
    pbpaste | tr ' ' \\n | el
}

function path() {
    if [ $# = 0 ]; then
        echo "$PATH" | tr : \\n
    elif [ $# = 1 ]; then
        local dir
        dir="$(~/bin/relpath "$1")"
        export DT_NO_RESPAWN=1
        export DYLD_LIBRARY_PATH=$(~/bin/addpath "$dir" "$DYLD_LIBRARY_PATH")
        export DYLD_FRAMEWORK_PATH=$(~/bin/addpath "$dir" "$DYLD_FRAMEWORK_PATH")
        export PATH=$(~/bin/addpath "$dir" "$PATH")
    else
        echo ?
        return 1
    fi
}
