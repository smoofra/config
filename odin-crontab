# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

0 0 * * *  crontab -l >$HOME/config/odin-crontab

0 0 * * * test -w /data/Backup &&  $HOME/bin/backup_github -C /data/Backup/github/ smoofra

0 0 * * * test -w /data/Backup &&  $HOME/bin/backup-mattermost

10 0 * * * test -w /data/Backup && $HOME/bin/cron-vdirsyncer

20 0 * * * test -w /data/Backup && $HOME/bin/cron-mbsync /usr/local/bin/mbsync kolab

20 0 * * * test -w /data/Backup && $HOME/bin/cron-mbsync /usr/local/bin/mbsync gmail

#30 3 * * * $HOME/bin/sullivan.py

30 2 * * * test -w /data/Backup && $HOME/bin/cron-instagram

0 3 * * *  test -w /data/Backup && $HOME/bin/flickr-download -q -o /data/Backup/flickr --user smoofra

30 3 * * * test -w /data/Backup && $HOME/bin/flickr-download -q -o /data/Backup/flickr-joey --user jdanna

45 3 * * * test -w /data/Backup && $HOME/bin/flickr-download -q -o /data/Backup/flickr-bridgett --user bridgettgwyer

0 9 1 * *  echo CRON TEST

