MAILDIR=$HOME/Maildir

#:0 c
#backup


:0 c 
*^From: .*vonage.com
*^Subject: .*new voicemail
| /home/larry/bin/vmnotify



:0
*^From: blockbuster@custhelp.com
$MAILDIR/

:0
*^From: [^ ]*@blockbuster.com
$MAILDIR/






:0
*^List-Id:.*darcs-devel.darcs.net
$MAILDIR/.darcs/


:0
*^Sender: .*FYI@LISTSERV.UMD.EDU
$MAILDIR/.spam/

:0
*^From:.*Borders Rewards
*^Subject:.*the Shortlist
$MAILDIR/.spam/



##
## BEGIN SPAM RECIPIES
##

# run it through spamassassin if it hasn't been already
:0 
* !^X-Spam-Status: YES
{
:0fw: /home/larry/.spamassassin.lock
| /usr/bin/spamassassin
}


# don't do any further spam processing if the user is in the whitelist
:0 
* !^X-Spam-Status:.*USER_IN_WHITELIST
{

# run it through spamprobe and store the result in SCORE
# if you set the output to a variable, it doesn't consider the mail delivered
:0
SCORE=| /usr/bin/spamprobe train

# run the mail through a filter to add a spamprobe header
:0 wf
| formail -I "X-SpamProbe: $SCORE"

# put it in =spam if spamprobe or spamassin thought it was spam
:0 a
*^X-SpamProbe: SPAM
$MAILDIR/.spam/

:0 
*^X-Spam-Status: YES
$MAILDIR/.spam/

}

##
## END SPAM RECIPIES
##







:0
*^List-Subscribe: .*madman
$MAILDIR/.madman/


:0
*^List-Id: .*slime-devel
$MAILDIR/.lisp/

:0
*^List-ID: <git.vger.kernel.org>
$MAILDIR/.git/ 


:0
*^List-Id: .*sbcl-devel
$MAILDIR/.lisp/

# :0 
# *^List-Id: <hah.mozdev.org>
# $MAILDIR/.hah/ 

:0
*^List-Id: .*bese-devel
$MAILDIR/.lisp/

:0
*^List-Id: .*cffi-devel
$MAILDIR/.lisp/

:0
*^List-Id: .*iterate-devel
$MAILDIR/.lisp/


:0 
*^Mailing-List:.*grassfed
$MAILDIR/.grassfed/


:0 
$MAILDIR/



