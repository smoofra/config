# -*- mode: cperl; -*- 

use HTML::TreeBuilder;
use HTML::Element;
use HTML::Tree;
use Digest::MD5; 

sub strip_ob_sidebar {
  my $data = shift;
  my $html = HTML::TreeBuilder->new;
  $html->utf8_mode(1);
  $html->parse($data);
  my @bad; 
  $html->traverse ([
                    sub {
                      my $x = shift;
                      if (ref $x eq 'HTML::Element' and
                          $x->tag eq 'div' and
                          defined $x->attr('class')) {
                        my $class = $x->attr ('class');
                        if ($class =~ /module-archives/ or
                            $class =~ /module-widget/ or
                            $class =~ /module-typelist/ or
                            $class =~ /module-syndicate/ or
                            $class =~ /module-calendar/ or
                            $class =~ /module-category-cloud/ or
                            $class =~ /module-recent-comments/) {
                          push @bad, $x;
                          return HTML::Element::PRUNE;
                        }
                      }
                      return HTML::Element::OK;                      
                    }
                   ]);
  for (@bad) {
    $_->detach; 
  }
  return $html->as_HTML('<>&', "\t");
}

sub obhook {
  my $item = shift;
  if (defined $item->{content}) {
    $item->{content} = strip_ob_sidebar $item->{content};
    return $item;
  }
}


{
  link => "http://elder-gods.org/~larry/watcher.cgi",
  pages => [
            { name => 'test',
              url => "http://elder-gods.org/test.html"},
            { name => 'maddox',
              url => 'http://maddox.xmission.com/',
              posthook => sub {
                my $item = shift;
                if (defined $item->{content}) {
                  my $re = qr/people think I'm right about everything/; 
                  $item->{content} =~ s/[^\n]*$re.*//s;
                }
                return $item; 
              }
            },
            { name => 'theory of everything comics',
              url => 'http://www.theoryofeverythingcomics.com/',
            },
            {
             name => 'the pain',
             url => 'http://thepaincomics.com/new_index.htm'
            },
            {
             name => 'cartoon guide to lob\'s theorem',
             url => 'http://www.overcomingbias.com/2008/08/lobs-theorem/comments/page/2/',
             posthook => \&obhook,
            },
            {
             name => 'Moral Error and Moral Disagreement',
             url => 'http://www.overcomingbias.com/2008/08/moral-disagreem/comments/page/2/',
             posthook => \&obhook,
            },
            {
             url => 'http://www.overcomingbias.com/2008/08/no-self-trust.html',
             name => 'You Provably Can\'t Trust Yourself',
             posthook => \&obhook,
            },
            {
             url => 'http://www.overcomingbias.com/2008/08/no-human-licens.html',
             name => 'No License To Be Human',
             posthook => \&obhook,
            },
            {
             url => 'http://homestarrunner.com/main1.swf',
             name => 'Homestar Runner',
             posthook => sub {
               my $item = shift;
               my $md5 = Digest::MD5->new;
               if (defined $item->{content}) {
                 $md5->add($item->{content});
                 $item->{content} = "MD5:" . $md5->hexdigest();
               }
               $item->{url} = 'http://homestarrunner.com/main1.html'; 
               return $item;
             }
            },
            {
             url => 'http://boomerang.blogs.com/optimist/2008/09/two-ways-to-lea.html',
             name => "two ways...",
            },
           ],
}
